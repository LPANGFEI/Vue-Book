{"remainingRequest":"C:\\Users\\LPANGFEI\\Desktop\\Vue\\vue-book\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\LPANGFEI\\Desktop\\Vue\\vue-book\\src\\views\\Ranking.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\LPANGFEI\\Desktop\\Vue\\vue-book\\src\\views\\Ranking.vue","mtime":1567757417212},{"path":"C:\\Users\\LPANGFEI\\Desktop\\Vue\\vue-book\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LPANGFEI\\Desktop\\Vue\\vue-book\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\LPANGFEI\\Desktop\\Vue\\vue-book\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LPANGFEI\\Desktop\\Vue\\vue-book\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { setTimeout } from \"timers\";\r\nimport BScroll from \"better-scroll\";\r\nimport BookDetails from \"../components/BookDetails\";\r\nexport default {\r\n    name: \"Ranking\",\r\n    data: () => ({\r\n        isLoading: true,\r\n        rankings: {},\r\n        menuBScroll: null,\r\n        listBScroll: null,\r\n        menus: [],\r\n        lists: [],\r\n        books: [],\r\n        booksHeight: [0],\r\n        currentIndex: 0,\r\n        activeIndex: null\r\n    }),\r\n    components: {\r\n        BookDetails\r\n    },\r\n    filters: {\r\n        toUpperCase(value) {\r\n            return value.toUpperCase();\r\n        }\r\n    },\r\n    methods: {\r\n        async getRankingMenu() {\r\n            let res = await this.$http(\"/ranking/gender\");\r\n            res = res.data;\r\n            this.$delete(res, \"ok\");\r\n            this.rankings = res;\r\n            let { index } = this.$route.query;\r\n            if (index === undefined) {\r\n                for (let i in res) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            this.activeIndex = index;\r\n            this.menus = res[index];\r\n            for (let i of this.menus) {\r\n                this.getRankingList(i._id);\r\n            }\r\n            // 加载动画\r\n            this.$nextTick(() => {\r\n                this.initLoading();\r\n            });\r\n        },\r\n        // 列表\r\n        async getRankingList(id) {\r\n            let res = await this.$http(`/ranking/${id}`);\r\n            res = res.data.ranking;\r\n            this.lists = res;\r\n            this.books.push(this.lists);\r\n            this.$nextTick(() => {\r\n                this.calculationHeight();\r\n            });\r\n        },\r\n        initLoading() {\r\n            setTimeout(() => {\r\n                this.isLoading = false;\r\n            }, 1000);\r\n        },\r\n        initBScroll() {\r\n            if (this.menuBScroll) {\r\n                this.menuBScroll.refresh();\r\n            } else {\r\n                this.menuBScroll = new BScroll(this.$refs.menu, {\r\n                    probeType: 3,\r\n                    click: true\r\n                });\r\n            }\r\n            if (this.listBScroll) {\r\n                this.listBScroll.refresh();\r\n            } else {\r\n                this.listBScroll = new BScroll(this.$refs.list, {\r\n                    probeType: 2,\r\n                    click: true\r\n                });\r\n                this.listBScroll.on(\"scroll\", this.booksWrapperScroll);\r\n            }\r\n        },\r\n        // 跳转排行榜\r\n        goToRanking(index) {\r\n            let title = this.$route.query.index;\r\n            if (title !== index) {\r\n                this.$router.replace({\r\n                    path: \"/ranking\",\r\n                    query: {\r\n                        index\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        // 跳转详情页\r\n        goToDetail(item) {\r\n            this.$router.push({\r\n                path: \"/bookdetail\",\r\n                query: {\r\n                    title: item.title,\r\n                    id: item._id\r\n                }\r\n            });\r\n        },\r\n        // 计算列表高度\r\n        calculationHeight() {\r\n            let height = 0;\r\n            let books = this.$refs.bookList;\r\n            books.forEach(item => {\r\n                height += item.clientHeight;\r\n            });\r\n            this.booksHeight.push(height);\r\n        },\r\n        // 点击菜单滑动列表\r\n        scrollToCurrentBook(index) {\r\n            this.currentIndex = index;\r\n            let offsetY = -this.booksHeight[index];\r\n            this.listBScroll.scrollTo(0, offsetY, 300);\r\n        },\r\n        // 滑动列表切换菜单\r\n        booksWrapperScroll({ y }) {\r\n            // 页面滑动后触发的滑动偏移量,与菜单栏哪一个应该高亮的对应函数\r\n            let num = parseInt(y);\r\n            if (num > 0) {\r\n                this.currentIndex = 0;\r\n            } else {\r\n                num = Math.abs(num); // 滑动页面向下滑动偏移量是负数\r\n                for (var i = 0; i < this.booksHeight.length - 1; i++) {\r\n                    let h1 = this.booksHeight[i];\r\n                    let h2 = this.booksHeight[i + 1];\r\n                    if (num >= h1 && num < h2) {\r\n                        this.currentIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.getRankingMenu();\r\n    },\r\n    mounted() {\r\n        this.initBScroll();\r\n    },\r\n    beforeDestroy() {\r\n        this.menuBScroll.destroy();\r\n        this.listBScroll.destroy();\r\n        this.menuBScroll = null;\r\n        this.listBScroll = null;\r\n    }\r\n};\r\n",{"version":3,"sources":["Ranking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Ranking.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <section class=\"ranking\">\r\n        <!-- loading -->\r\n        <Spin v-show=\"isLoading\" />\r\n        <!-- 顶部栏 -->\r\n        <BookHeader title=\"排行榜\" />\r\n        <!-- 导航 -->\r\n        <nav class=\"nav\">\r\n            <span\r\n                v-for=\"(ranking, index) in rankings\"\r\n                :key=\"index\"\r\n                :class=\"['tab',{active:activeIndex===index}]\"\r\n                @click=\"goToRanking(index)\"\r\n            >{{index | toUpperCase}}</span>\r\n        </nav>\r\n        <!-- 内容 -->\r\n        <div class=\"container\">\r\n            <!-- 侧边栏 -->\r\n            <div class=\"book-menu\" ref=\"menu\">\r\n                <div>\r\n                    <div\r\n                        :class=\"['menu',{active:currentIndex===index}]\"\r\n                        v-for=\"(menu,index) in menus\"\r\n                        :key=\"index\"\r\n                        @click=\"scrollToCurrentBook(index)\"\r\n                    >{{menu.shortTitle}}</div>\r\n                    <div class=\"blank\"></div>\r\n                </div>\r\n            </div>\r\n            <!-- 排行列表 -->\r\n            <div class=\"book-list\" ref=\"list\">\r\n                <div>\r\n                    <div class=\"list\" v-for=\"(book,index) in books\" :key=\"index\" ref=\"bookList\">\r\n                        <!-- 榜单名 -->\r\n                        <div class=\"title\">\r\n                            <img v-lazy=\"`//statics.zhuishushenqi.com${book.cover}`\" />\r\n                            <span>{{book.title}}</span>\r\n                        </div>\r\n                        <!-- 内容 -->\r\n                        <BookDetails\r\n                            v-for=\"data in book.books\"\r\n                            :key=\"data._id\"\r\n                            :datas=\"data\"\r\n                            @jump=\"goToDetail\"\r\n                        />\r\n                        <div class=\"none\" v-show=\"!book.books.length\">\r\n                            <p>空</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"blank\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport { setTimeout } from \"timers\";\r\nimport BScroll from \"better-scroll\";\r\nimport BookDetails from \"../components/BookDetails\";\r\nexport default {\r\n    name: \"Ranking\",\r\n    data: () => ({\r\n        isLoading: true,\r\n        rankings: {},\r\n        menuBScroll: null,\r\n        listBScroll: null,\r\n        menus: [],\r\n        lists: [],\r\n        books: [],\r\n        booksHeight: [0],\r\n        currentIndex: 0,\r\n        activeIndex: null\r\n    }),\r\n    components: {\r\n        BookDetails\r\n    },\r\n    filters: {\r\n        toUpperCase(value) {\r\n            return value.toUpperCase();\r\n        }\r\n    },\r\n    methods: {\r\n        async getRankingMenu() {\r\n            let res = await this.$http(\"/ranking/gender\");\r\n            res = res.data;\r\n            this.$delete(res, \"ok\");\r\n            this.rankings = res;\r\n            let { index } = this.$route.query;\r\n            if (index === undefined) {\r\n                for (let i in res) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            this.activeIndex = index;\r\n            this.menus = res[index];\r\n            for (let i of this.menus) {\r\n                this.getRankingList(i._id);\r\n            }\r\n            // 加载动画\r\n            this.$nextTick(() => {\r\n                this.initLoading();\r\n            });\r\n        },\r\n        // 列表\r\n        async getRankingList(id) {\r\n            let res = await this.$http(`/ranking/${id}`);\r\n            res = res.data.ranking;\r\n            this.lists = res;\r\n            this.books.push(this.lists);\r\n            this.$nextTick(() => {\r\n                this.calculationHeight();\r\n            });\r\n        },\r\n        initLoading() {\r\n            setTimeout(() => {\r\n                this.isLoading = false;\r\n            }, 1000);\r\n        },\r\n        initBScroll() {\r\n            if (this.menuBScroll) {\r\n                this.menuBScroll.refresh();\r\n            } else {\r\n                this.menuBScroll = new BScroll(this.$refs.menu, {\r\n                    probeType: 3,\r\n                    click: true\r\n                });\r\n            }\r\n            if (this.listBScroll) {\r\n                this.listBScroll.refresh();\r\n            } else {\r\n                this.listBScroll = new BScroll(this.$refs.list, {\r\n                    probeType: 2,\r\n                    click: true\r\n                });\r\n                this.listBScroll.on(\"scroll\", this.booksWrapperScroll);\r\n            }\r\n        },\r\n        // 跳转排行榜\r\n        goToRanking(index) {\r\n            let title = this.$route.query.index;\r\n            if (title !== index) {\r\n                this.$router.replace({\r\n                    path: \"/ranking\",\r\n                    query: {\r\n                        index\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        // 跳转详情页\r\n        goToDetail(item) {\r\n            this.$router.push({\r\n                path: \"/bookdetail\",\r\n                query: {\r\n                    title: item.title,\r\n                    id: item._id\r\n                }\r\n            });\r\n        },\r\n        // 计算列表高度\r\n        calculationHeight() {\r\n            let height = 0;\r\n            let books = this.$refs.bookList;\r\n            books.forEach(item => {\r\n                height += item.clientHeight;\r\n            });\r\n            this.booksHeight.push(height);\r\n        },\r\n        // 点击菜单滑动列表\r\n        scrollToCurrentBook(index) {\r\n            this.currentIndex = index;\r\n            let offsetY = -this.booksHeight[index];\r\n            this.listBScroll.scrollTo(0, offsetY, 300);\r\n        },\r\n        // 滑动列表切换菜单\r\n        booksWrapperScroll({ y }) {\r\n            // 页面滑动后触发的滑动偏移量,与菜单栏哪一个应该高亮的对应函数\r\n            let num = parseInt(y);\r\n            if (num > 0) {\r\n                this.currentIndex = 0;\r\n            } else {\r\n                num = Math.abs(num); // 滑动页面向下滑动偏移量是负数\r\n                for (var i = 0; i < this.booksHeight.length - 1; i++) {\r\n                    let h1 = this.booksHeight[i];\r\n                    let h2 = this.booksHeight[i + 1];\r\n                    if (num >= h1 && num < h2) {\r\n                        this.currentIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.getRankingMenu();\r\n    },\r\n    mounted() {\r\n        this.initBScroll();\r\n    },\r\n    beforeDestroy() {\r\n        this.menuBScroll.destroy();\r\n        this.listBScroll.destroy();\r\n        this.menuBScroll = null;\r\n        this.listBScroll = null;\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.ranking {\r\n    width: 100%;\r\n    overflow: hidden;\r\n    .nav {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 40px;\r\n        border-bottom: 1px solid #eee;\r\n        .tab {\r\n            display: inline-block;\r\n            flex: 1;\r\n            text-align: center;\r\n            font-size: 14px;\r\n            line-height: 40px;\r\n            color: #8a8a8f;\r\n            &.active {\r\n                border-bottom: 1px solid #b83320;\r\n                font-weight: bold;\r\n                color: #b83320;\r\n            }\r\n        }\r\n    }\r\n    .container {\r\n        display: flex;\r\n        width: 100%;\r\n        height: 100vh;\r\n        .blank {\r\n            height: 80px !important;\r\n        }\r\n    }\r\n}\r\n.book-menu {\r\n    flex: 0 0 80px;\r\n    width: 80px;\r\n    height: 100vh;\r\n    padding: 0 10px;\r\n    overflow: hidden;\r\n    .menu {\r\n        width: 100%;\r\n        height: 50px;\r\n        border-bottom: 1px solid #eee;\r\n        font-size: 13px;\r\n        text-align: center;\r\n        line-height: 50px;\r\n        color: #8a8a8f;\r\n        &.active {\r\n            font-weight: bold;\r\n            color: #b83320;\r\n        }\r\n    }\r\n}\r\n.book-list {\r\n    flex: 1;\r\n    width: 100%;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    .list {\r\n        width: 100%;\r\n        padding: 10px;\r\n        border-bottom: 1px solid #eee;\r\n        .title {\r\n            display: flex;\r\n            // justify-content: center;\r\n            // align-items: center;\r\n            width: 100%;\r\n            img {\r\n                display: block;\r\n                width: 20px;\r\n                height: 20px;\r\n            }\r\n            span {\r\n                flex: 1;\r\n                width: 100%;\r\n                height: 20px;\r\n                padding-left: 10px;\r\n                font-size: 14px;\r\n                line-height: 20px;\r\n            }\r\n        }\r\n        .none {\r\n            width: 100%;\r\n            height: 20px;\r\n            p {\r\n                margin: 10px 0;\r\n                font-size: 14px;\r\n                line-height: 20px;\r\n                text-align: center;\r\n                color: #ccc;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]}]}